
openapi: 3.0.3
info:
  title: MediaGuard API
  version: 1.0.0
  description: Extendable API for media hashing and watermarking.
servers:
  - url: http://localhost:8080
components:
  schemas:
    APIEnvelope:
      type: object
      properties:
        version:
          type: string
          example: v1
        status:
          type: string
          example: success
        message:
          type: string
        data:
          type: object
    HashResponse:
      type: object
      properties:
        file_uuid:
          type: string
        filename:
          type: string
        hashes:
          type: object
          additionalProperties:
            type: string
    FileResponse:
      type: object
      properties:
        file_uuid:
          type: string
        filename:
          type: string
        hashes:
          type: object
          additionalProperties:
            type: string
        watermarks:
          type: array
          items:
            $ref: '#/components/schemas/WaterMarkHistory'
    WaterMarkHistory:
      type: object
      properties:
        algorithm:
          type: string
        md5:
          type: string
    WaterMarkRespone:
      type: object
      properties:
        algorithm:
          type: string
        watermark:
          type: object
          additionalProperties:
            type: string
    EntrySimilarity:
      type: object
      properties:
        algorithm:
          type: string
        uuid:
          type: string
        similarity:
          type: integer
        hashId:
          type: string
  

paths:
  /api/v1/hashes:
    post:
      summary: Calculates and stores perceptual hashes for a media file.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media:
                  type: string
                  format: binary
                config:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIEnvelope'
  /api/v1/hashes/algorithms:
    get:
      summary: Returns a list of supported hash algorithms.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIEnvelope'
  /api/v1/query/hashes/by-media:
    post:
      summary: Queries the database to find media with similar perceptual hashes.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media:
                  type: string
                  format: binary
                config:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIEnvelope'
  /api/v1/query/hashes/by-hash:
    post:
      summary: Queries the database for entries matching specific hash values.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hashes:
                  type: object
                  additionalProperties:
                    type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIEnvelope'
  /api/v1/files/{uuid}:
    get:
      summary: Retrieves all stored information for a file.
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIEnvelope'
  /api/v1/watermarks:
    post:
      summary: Embeds a watermark into a media file.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media:
                  type: string
                  format: binary
                config:
                  type: string
                data:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIEnvelope'
  /api/v1/query/watermarks:
    post:
      summary: Extracts a watermark from a media file.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media:
                  type: string
                  format: binary
                config:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIEnvelope'
  /api/v1/watermarks/algorithms:
    get:
      summary: Returns a list of supported watermarking algorithms.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIEnvelope'
